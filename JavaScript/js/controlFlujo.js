console.log("holis");

/* Flujo de control 

Cuando habklamos de flujo de control hablamos del oreden natural en el que se ejecutan las instrucciones en nuestro programa. Estas isntrucciones pueden ser una funci√≥n, un console.log, un cliclo etc

Lsa importancia que tiene el control de fjujo radica en la posibilidad de poder ejecutar cosas o isntrucciones dependiendo de una condicional (un elemento o instruccion detonante)

Condicionales

Las considicionales son palabras reservadas que nos permiten evaluar si una condici√≥n se cumple o no bajo ciertos criterios (estipulados por el programador). Las respuestas o salidas esperadas siempre partiran de un true o un false.

Tengo camisa limpia?
    s√≠: voy a la fiesta
    no: me quedo en casa

Condicional if (si)

If nos sirve para validar si una condici√≥n se cumple o no, si secumple entonces ejecutamos un bloque de c√≥digo que esta dentro del if. Si no se cumple entonces no hacemos nada
Nota: es la m√°s sencilla, pero la m√°s limitante porque solo nos da una opci√≥n.

if (condicion){
    //bloque de c√≥digo
}

*/

//Ejemplo: Felipe va a ir a una fiesta y necesita tener su camisa limpia para poder ir

let camisaLimpia = true;

if (camisaLimpia) {//tiene que ser true 
    console.log("Felipe va a la fiesta");
}

/* 

else(de otro modo, de lo contrario, si no)

if (condicion detonante){
    //bloque de c√≥digo que se ejecuta si la condicion es verdadera
} else{
    //bloque de c√≥digo que se ejecuta si la condici√≥n es falsa
}

*/

if (camisaLimpia = false) {
    console.log("Felipe va a la fiesta");//true
} else {
    console.log("Felipe no va la fiesta");//false
}

/*

else if

Esta condicion nos ayuda  a jugar con m√°s opciones y m√°s detonantes, para tener muchas posibilidades en el mismo c√≥digo. Para lograr esto, vamos a unir el else con el if

if (condicion detonante){
    //bloque de c√≥digo que se ejecuta si la condicion es verdadera
} else if (condicion detonante2){
    //bloque de c√≥digo que se ejecuta si la condicion 1 es falsa y la 2 es veradera
} else{
    //bloque de c√≥digo que se ejecuta si ambas condiciones son falsas.
}

*/

//Ejemplo 2: Felipe tiene hambre, y quiere comer chilaquiles

// if (hambre = true) {
//     console.log("Felipe va a comer");
// } else if (chilaquiles = verdes) {
//     console.log("Felipe come chilaquiles");
// } else {
//     console.log("Felipe no come y se pone triste");
// }

//ejemplo 3: Escribe un programa que em muestre 3 mensajes diferentes. primer mesaje: se muestra si son las 13hr y deber√° imprimir "Vamos a descanso". el segundo mesaje se muestra si son las 14:30 y deber√° imprimir "vamos a comer", el tercero se muestra si no se cumple nada imprime " lo siento mi ciela, segumimos programando"

//Prompt es una forma de ingresar datos y hacer uso de ellos

// alert("Hola Generation");

// let hora = prompt("Hola, dime una hora");

// let hora = 17; antes del prompt

if (hora == 13) {
    alert("vamos a descanso");
} else if (hora == 14) {
    alert("Vamos a comer");
} else {
    alert("Lo siento mi ciela, seguimos programando");
}

/* 
Switch (cambiar o intercambiar / seg√∫n sea el caso)

Esta condicional nos permite hacer multimples operaciones y tomar desiciones en funci√≥n de la opci√≥n deseada (estado de la variable)

Evalua una expresion comparando el valor de una variable con la expresion o caso, y ejecuta las declaraciones asociadas con ese caso, as√≠ como los casos que siguen.

Elementos principales del switch: un valor a evaluar, un detonante para cada caso, una salida para cada caso y una salida en general.

switch (expresion){
    case 1:
        //bloque de c√≥digo que se ejecuta si la opci√≥n seleccionada es igual a 1
        break;
    case 2:
        //bloque de c√≥digo que se ejecuta si la opci√≥n seleccionada es igual a 2
        break;
    case 3:
        //bloque de c√≥digo que se ejecuta si la opci√≥n seleccionada es igual a 3
        break;

    default:
        ////bloque de c√≥digo que se ejecuta si ninguna opci√≥n coincide
    
    }


*/

// let op = parseInt(prompt("A que piso vas"));

switch (op) {
    case 1:
        alert("Llegaste al piso 1");
        break;
    case 2:
        alert("Llegaste al piso 2");
        break;
    case 3:
        alert("Llegaste al piso 3");
        break;
    case 4:
        alert("Llegaste al piso 4");
        break;
    case 5:
        alert("Llegaste al piso 5");
        break;
    default:
        alert("Opci√≥n no v√°lida")
}


//Funciones aplicables a un consultorio dental

let tipoServicio;
let tiempoConsulta;
let emergencia;
let promocion;
let clienteFrecuente;
let costo;


function calcularConsulta(tipoServicio, tiempoConsulta, emergencia, promocion, clienteFrecuente) {
    tipoServicio = "extraccion";
    tiempoConsulta = 120;
    emergencia = true;
    promocion = .10;
    clienteFrecuente = true;
    costo = 5000;

    //calcular costo total antes de ver si es cliente frecuente
    let costoTotal = costo - promocion;

    if (clienteFrecuente) {
        //invocamos funci√≥n para calcular 
    }
}

function calcularCostoConsultaDos(duracionMinutos, costoPorMinuto, clienteFrecuente) {
    let costoTotal = duracionMinutos * costoPorMinuto;

    if (clienteFrecuente) {
        costoTotalConDesceunto = (costoTotal * .10)
    }
}

function registrarPaciente() {

}

function guardarPaciente() {

}

if (pacienteRegistrado = true) {
    console.log("Paciente con registro previo")
} else {
    function guardarPaciente() {

    }
}


/* 
*1 condicion para cada tipo sentencia

if-else (pase a la cita)
Lista: 
-saber si el usuario pag√≥

let usuarioPago = true;

if (usuarioPago) {
    console.log(‚ÄúEl usuario ha pagado‚Äù);
} else {
    console.log(‚ÄúEl usuario no ha pagado, p√°gueme!‚Äù);
}

if-else if- else (horario del consultorio dental)

Lista else if:
Verificar horario del consultorio (de 7 am a 1 pm y de 2 pm a 5 pm)
Descanso de 1 pm a 2 pm
Entrada despu√©s de las 7 am. salida despu√©s de las 5 pm. no se aceptan citas despu√©s de las 4:20
Determinar el primer bloque de horas de consulta 
Determinar bloque de descanso
Determinar segundo bloque de horas de consulta

Saber a qu√© hora est√° abierto el horario
If - 	Si vas por la ma√±ana (7 am - 12:20 pm)
        Si est√° abierto
Else if 	Si vas al mediod√≠a (1 pm - 2 pm)
        Est√° cerrado por descanso para el doc
Else - 	Si vas por la tarde (2 pm - 4:20 pm)
        S√≠ est√° abierto

let horario = prompt(‚ÄúIngrese el horario, Ma√±ana, Mediod√≠a o Tarde‚Äù);
if (horario == ‚Äúma√±ana‚Äù) {
    console.log(‚ÄúEst√° abierto, horario 7 am - 12:20 pm‚Äù); //12:20 √∫ltima cita antes de comer)
} else if (horario == ‚Äúmediod√≠a‚Äù) {
    console.log(‚ÄúCerrado por horario de almuerzo, 1 pm - 2 pm‚Äù);
} else {
    console.log(‚ÄúEst√° por cerrar el consultorio, horarios de 2 pm a 4:20 pm‚Äù); //4:20 üòÆ
}




switch (se elige especialidad y se muestra qu√© doctor atiende)
Lista:
-El paciente sabr√° su especialidad
-El paciente quiere saber qu√© especialista le dar√° la consulta

let especialistaPorTratamiento = parseInt(prompt(‚ÄúElige una especialidad, 1. Extracci√≥n 2. Limpieza 3. Ortodoncia‚Äù));
//extraccion = 1;
//limpieza = 2;
//ortodoncia = 3;

switch (especialistaPorTratamiento){
    case 1:
    console.log(‚ÄúPara extracci√≥n se tendr√° al Dr. Fulano‚Äù);
    break;

    case 2:
    console.log(‚ÄúPara limpieza se tendr√° a la Dra. Fulana‚Äù);
    break;

    case 3:
    console.log(‚ÄúPara ortodoncia se tendr√° a la Dra. Perengana‚Äù);
    break;

    default:
    console.log(‚ÄúElija una opci√≥n v√°lida‚Äù);
}



*/